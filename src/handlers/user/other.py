import logging

from aiogram import Dispatcher, types
from aiogram.dispatcher.filters import Text

import createBot
from keyboards.reply import menu_kb


async def start(msg: types.Message):
    logging.info(f'| {msg.from_user.id} | @{msg.from_user.username} > "{msg.text}"')
    
    createBot.database.create_profile(int(msg.from_user.id), f'@{msg.from_user.username}')
    await msg.answer("üíµ<b>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</b> –Ø —è–≤–ª—è—é—Å—å –±–æ—Ç–æ–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—é–º–µ."
                     " <b>–ú–æ—è –∑–∞–¥–∞—á–∞ - –ø–æ–º–æ—á—å –≤–∞–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à–µ —Ä–µ–∑—é–º–µ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é "
                     "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—é –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≤–∞—à–∏—Ö —à–∞–Ω—Å–æ–≤ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏.</b>\n"
                     "<em>–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –º–µ–Ω—é —Å–Ω–∏–∑—É‚§µ</em>",
                     reply_markup=menu_kb)


async def profile(msg: types.Message):
    logging.info(f'| {msg.from_user.id} | @{msg.from_user.username} > "{msg.text}"')

    user_info_db = createBot.database.get_info_user(msg.from_user.id)
    
    result_info = []
    for field in user_info_db:
        if field is None:
            field = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
        elif field == int(msg.from_user.id):
            continue
        
        result_info.append(field)
    
    await msg.answer(f"<b>üñ•–ü—Ä–æ—Ñ–∏–ª—å</b>\n\n–¢–µ–ª–µ–≥—Ä–∞–º: <em>{result_info[0]}</em>\n–ò–º—è: <em>{result_info[1]}</em>\n"
                     f"–í–æ–∑—Ä–∞—Å—Ç: <em>{result_info[2]}</em>")


async def feedback(msg: types.Message):
    logging.info(f'| {msg.from_user.id} | @{msg.from_user.username} > "{msg.text}"')

    await msg.answer("<b>üîª–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∫–∞–Ω–¥–∏–¥–∞—Ç—É:</b>\n"
                     "  üî∏–ì—Ä–∞–º–æ—Ç–Ω–∞—è —Ä–µ—á—å\n"
                     "  üî∏–ñ–µ–ª–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n"
                     "  üî∏–í—ã—Å–æ–∫–∞—è –∫–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å\n"
                     "  üî∏–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n"
                     "  üî∏–°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å\n\n"
                     "<b>üîª–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏:</b>\n"
                     "  üî∏–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –Ω–∞ –≤—ã—Å–æ–∫–æ–º —É—Ä–æ–≤–Ω–µ\n"
                     "  üî∏–†–∞–±–æ—Ç–∞ —Å –ö–ª–∏–µ–Ω—Ç–∞–º–∏\n"
                     "  üî∏–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤\n\n"
                     "<b>üîª–£—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ã:</b>\n"
                     "  üî∏–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã 9:00-19:00, –ü–ù-–ü–¢\n"
                     "  üî∏–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã ~200-5000$\n"
                     "  üî∏–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã\n"
                     "  üî∏–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ—Ñ–∏—Å —Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º –∏ Starlink\n"
                     "  üî∏–û–±—É—á–µ–Ω–∏–µ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ\n")
    

def register_other_handlers(dp: Dispatcher) -> None:
    dp.register_message_handler(start, commands=['start'])
    dp.register_message_handler(profile, Text(equals="üñ•–ü—Ä–æ—Ñ–∏–ª—å"))
    dp.register_message_handler(feedback, Text(equals="‚ùó–£—Å–ª–æ–≤–∏—è –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è"))